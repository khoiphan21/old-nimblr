type User @model {
  id: ID!
  username: String!
  email: String!
  firstName: String
  lastName: String 
  documentIds: [String]
}

type Document @model {
  id: ID!
  version: String
  type: DocumentType!
  title: String
  ownerId: String
  editorIds: [String]
  viewerIds: [String]
  order: [String]
  blockIds: [String]
  lastUpdatedBy: String
  timestamp: String
}

enum DocumentType {
  GENERIC
  FORM
}

interface Block {
  id: ID!
  version: String
  type: BlockType
  documentId: String
  lastUpdatedBy: String
  timestamp: String
}

enum BlockType {
  TEXT
}

type TextBlock implements Block @model {
  id: ID!
  version: String
  type: BlockType
  documentId: String
  lastUpdatedBy: String
  timestamp: String
  value: String
}

type Query {
  getBlocksFromDocument(documentId: ID!): [Block]
}