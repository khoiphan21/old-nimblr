type User @model {
  id: ID!
  username: String!
  email: String!
  firstName: String
  lastName: String 
  documentIds: [String]
}

type Document @model {
  id: ID!
  version: String
  type: DocumentType!
  title: String
  ownerId: String
  editorIds: [String]
  viewerIds: [String]
  order: [String]
  blockIds: [String]
  lastUpdatedBy: String
  createdAt: String
  updatedAt: String
}

enum DocumentType {
  GENERIC
  FORM
}

type Block @model {
  # Note: this type should contain ALL possible attributes from each block type
  id: ID!
  version: String
  type: BlockType
  documentId: String
  lastUpdatedBy: String
  createdAt: String
  updatedAt: String
  # Attributes from TextBlock
  value: String
}

enum BlockType {
  TEXT
}

# This type is only a guide as to what values are relevant to TextBlock
# It still refers to the Block table with all kinds of blocks in it
type TextBlock {
  id: ID!
  version: String
  type: BlockType
  documentId: String
  lastUpdatedBy: String
  createdAt: String
  updatedAt: String
  value: String
}

type Mutation {
  createTextBlock(input: CreateTextBlockInput!): TextBlock
  updateTextBlock(input: UpdateTextBlockInput!): TextBlock
}

type Subscription {
  onUpdateBlockInDocument(documentId: ID!): Block @aws_subscribe(mutations: ["updateBlock"])
}


input CreateTextBlockInput {
  id: ID
  version: String!
  type: BlockType!
  documentId: String!
  lastUpdatedBy: String!
  value: String!
}

input UpdateTextBlockInput {
  id: ID!
  version: String!
  type: BlockType
  documentId: String
  lastUpdatedBy: String!
  value: String!
}
